{"version":3,"sources":["../gulpfile.js"],"names":["gulp","require","babel","plumber","scss","autoprefixer","streamCombiner","concat","_if","cleanCSS","cssmin","cssnano","sourcemaps","rigger","newer","del","rev","revReplace","notify","jshint","uglify","imagemin","pngquant","browserSync","reload","isDevelopment","process","env","NODE_ENV","combine","obj","path","src","dist","config","server","baseDir","tunnel","host","port","logPrefix","task","pipe","errorHandler","onError","title","message","err","init","sourceMap","errLogToConsole","cascade","write","stop","dest","manifest","stream","allowEmpty","presets","on","progressive","svgoPlugins","removeViewBox","use","interlaced","watch"],"mappings":"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","file":"gulpfile.js","sourcesContent":["'use strict';\n\nconst gulp = require('gulp');\nconst babel = require('gulp-babel');\nconst plumber = require('gulp-plumber');\nconst scss = require('gulp-sass');\nconst autoprefixer = require('gulp-autoprefixer');\nconst streamCombiner = require('stream-combiner2');\nconst concat = require('gulp-concat');\nconst _if = require('gulp-if');\nconst cleanCSS = require('gulp-clean-css');\nconst cssmin = require('gulp-minify-css');\nconst cssnano = require('gulp-cssnano');\nconst sourcemaps = require('gulp-sourcemaps');\nconst rigger = require('gulp-rigger');\nconst newer = require('gulp-newer');\nconst del = require('del');\nconst rev = require('gulp-rev');\nconst revReplace = require('gulp-rev-replace');\nconst notify = require('gulp-notify');\nconst jshint = require('gulp-jshint');\nconst uglify = require('gulp-uglify');\nconst imagemin = require('gulp-imagemin');\nconst pngquant = require('imagemin-pngquant');\nconst browserSync = require('browser-sync');\n\nconst reload = browserSync.reload;\nconst isDevelopment = !process.env.NODE_ENV || process.env.NODE_ENV == 'development';\nconst combine = streamCombiner.obj;\nconst path = {\n    src: 'src',\n    dist: 'build'\n};\n\nconst config = {\n    server: {\n        baseDir: path.dist\n    },\n    tunnel: true,\n    host: 'localhost',\n    port: 3000,\n    logPrefix: \"Frontend_MarieKam\"\n};\n\ngulp.task('styles', function() {\n    gulp.src(`${path.src}/**/main.scss`)\n        .pipe(plumber({\n            errorHandler: notify.onError(err => ({\n                title: 'SCSS',\n                message: err.message\n            }))\n        }))\n        .pipe(_if(isDevelopment, sourcemaps.init()))\n        .pipe(scss({\n            sourceMap: true,\n            errLogToConsole: true\n        }))\n        .pipe(autoprefixer(['last 15 versions', '> 1%', 'ie 8', 'ie 7'], {cascade: true}))\n        // .pipe(cssmin({keepBreaks: true}))\n        .pipe(_if(!isDevelopment, cssnano()))\n        .pipe(_if(!isDevelopment, cleanCSS()))\n        .pipe(_if(isDevelopment, rev()))\n        .pipe(concat('style.css'))\n        .pipe(_if(isDevelopment, sourcemaps.write()))\n        .pipe(plumber.stop())\n        .pipe(gulp.dest(`${path.dist}/css/`))\n        .pipe(_if(isDevelopment, rev.manifest('css.json')))\n        .pipe(_if(isDevelopment, gulp.dest('manifest')))\n        .pipe(reload({stream: true}));\n});\n\ngulp.task('clean', () => del([`${path.dist}/**/*.**`, 'manifest']));\n\ngulp.task('htmls', () => {\n    gulp.src(`${path.src}/**/*.html`)\n        .pipe(plumber({\n            errorHandler: notify.onError(err => ({\n                title: 'HTML',\n                message: err.message\n            }))\n        }))\n        .pipe(_if(isDevelopment, revReplace({\n            manifest: gulp.src('manifest/css.json', { allowEmpty: true})\n        })))\n        .pipe(rigger())\n        .pipe(plumber.stop())\n        .pipe(newer(`${path.dist}/`))\n        .pipe(gulp.dest(`${path.dist}/`))\n        .pipe(reload({stream: true}));\n});\n\ngulp.task('scripts', function() {\n    combine(\n        gulp.src(`${path.src}/js/*.js`),\n        babel({\n            presets: ['es2015']\n        }),\n        rigger(),\n        _if(isDevelopment, sourcemaps.init()),\n        // uglify(),\n        _if(isDevelopment, sourcemaps.write()),\n        gulp.dest(`${path.dist}/js/`),\n        reload({stream: true})\n    ).on('error', notify.onError());\n});\n\ngulp.task('images', () => {\n    gulp.src(`${path.src}/img/*.{png,jpg,svg}`)\n        .pipe(imagemin({\n            progressive: true,\n            svgoPlugins: [{removeViewBox: false}],\n            use: [pngquant()],\n            interlaced: true\n        }))\n        .pipe(gulp.dest(`${path.dist}/css/img/`))\n        .pipe(_if(!isDevelopment, combine(rev.manifest('src.json'), gulp.dest('manifest'))))\n        .pipe(reload({stream: true}));\n});\n\ngulp.task('fonts', () => {\n    gulp.src(`${path.src}/fonts/*.*`)\n        .pipe(gulp.dest(`${path.dist}/css/fonts/`));\n});\n\ngulp.task('libs', () => {\n    gulp.src(`${path.src}/lib/*.*`)\n        .pipe(gulp.dest(`${path.dist}/lib/`));\n});\n\n\ngulp.task('build', ['clean', 'htmls', 'styles', 'scripts', 'images', 'fonts', 'libs']);\n\ngulp.task('watch', () => {\n    gulp.watch(`${path.src}/**/*.scss`, ['styles']);\n    gulp.watch(`${path.src}/**/*.html`, ['htmls']);\n    gulp.watch(`${path.src}/**/*.js`, ['scripts']);\n    gulp.watch(`${path.src}/img/*.{png,jpg,svg}`, ['images']);\n    gulp.watch(`${path.src}/fonts/*.*`, ['fonts']);\n    gulp.watch(`${path.src}/lib/*.*`, ['libs']);\n});\n\ngulp.task('server', function () {\n    browserSync(config);\n});\n\n\ngulp.task('dev', ['build', 'serve', 'watch']);\ngulp.task('default', ['build', 'server', 'watch']);"]}