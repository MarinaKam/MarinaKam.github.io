@charset "UTF-8";a,ins{text-decoration:none}a,article,aside,details,figcaption,figure,footer,header,hgroup,main,menu,nav,section,summary{display:block}:focus,a:active,a:hover{outline:0}@font-face{font-family:Montserrat-Bold;src:url(../fonts/Montserrat-Bold.eot);src:url(../fonts/Montserrat-Bold.eot?#iefix) format("embedded-opentype"),url(../fonts/Montserrat-Bold.woff) format("woff"),url(../fonts/Montserrat-Bold.ttf) format("truetype"),url(../fonts/Montserrat-Bold.svg#AftaserifRegular) format("svg");font-weight:400;font-style:normal}@font-face{font-family:Montserrat-Regular;src:url(../fonts/Montserrat-Regular.eot);src:url(../fonts/Montserrat-Regular.eot?#iefix) format("embedded-opentype"),url(../fonts/Montserrat-Regular.woff) format("woff"),url(../fonts/Montserrat-Regular.ttf) format("truetype"),url(../fonts/Montserrat-Regular.svg#AftaserifRegular) format("svg");font-weight:400;font-style:normal}@font-face{font-family:Roboto-Light;src:url(../fonts/Roboto-Light.eot);src:url(../fonts/Roboto-Light.eot?#iefix) format("embedded-opentype"),url(../fonts/Roboto-Light.woff) format("woff"),url(../fonts/Roboto-Light.ttf) format("truetype"),url(../fonts/Roboto-Light.svg#AftaserifRegular) format("svg");font-weight:400;font-style:normal}a,abbr,acronym,address,applet,b,big,blockquote,body,caption,center,cite,code,dd,del,dfn,div,dl,dt,em,fieldset,font,form,h1,h2,h3,h4,h5,h6,html,i,iframe,img,ins,kbd,label,legend,li,object,ol,p,pre,q,s,samp,small,span,strike,strong,sub,sup,table,tbody,td,tfoot,th,thead,tr,tt,u,ul,var{margin:0;padding:0;border:0;outline:0;font:inherit;vertical-align:baseline;background:0 0}body{line-height:1;background-color:#fff;margin:0}ol,ul{list-style:none}blockquote,q{quotes:none}blockquote:after,blockquote:before,q:after,q:before{content:'';content:none}del{text-decoration:line-through}a{background-color:transparent}*,:after,:before{box-sizing:border-box;behavior:url(PIE.htc)}/*! normalize.css v3.0.3 | MIT License | github.com/necolas/normalize.css */html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%;behavior:url(src-slide/PIE.htc)}audio,canvas,progress,video{display:inline-block;vertical-align:baseline}audio:not([controls]){display:none;height:0}[hidden],template{display:none}abbr[title]{border-bottom:1px dotted}b,optgroup,strong{font-weight:700}dfn{font-style:italic}h1{font-size:2em;margin:.67em 0}mark{background:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sup{top:-.5em}sub{bottom:-.25em}img{border:0}svg:not(:root){overflow:hidden}figure{margin:1em 40px}hr{box-sizing:content-box;height:0}pre,textarea{overflow:auto}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}button,input,optgroup,select,textarea{color:inherit;font:inherit;margin:0}button{overflow:visible}button,select{text-transform:none}button,html input[type=button],input[type=reset],input[type=submit]{-webkit-appearance:button;cursor:pointer}button[disabled],html input[disabled]{cursor:default}button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0}input{line-height:normal}input[type=checkbox],input[type=radio]{box-sizing:border-box;padding:0}input[type=number]::-webkit-inner-spin-button,input[type=number]::-webkit-outer-spin-button{height:auto}input[type=search]{-webkit-appearance:textfield;box-sizing:content-box}input[type=search]::-webkit-search-cancel-button,input[type=search]::-webkit-search-decoration{-webkit-appearance:none}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{border:0;padding:0}table{border-collapse:collapse;border-spacing:0}td,th{padding:0}@media (min-width:320px){.header,.header__topic,.header__wrap{position:relative;overflow:hidden;margin:0 auto}.choiсe__link,.sign .checkin__link{behavior:url(PIE.htc)}.header,.log .checkin__link,.logo__link,.sign .checkin__link{color:#fff}.header{text-align:center;height:540px;background:url(../img/lading-img.jpg) -402px -9px/cover no-repeat}.header__wrap{width:88%}.header__checkin{margin:19px auto}.log,.sign{display:inline-block;vertical-align:top;font:14px Montserrat-Bold,sans-serif}.log{margin:10px 11px 0 0}.sign .checkin__link{width:90px;height:36px;padding:8px 0 0;border:2px solid #fff;border-radius:18px;margin:0 0 0 4px}.header__logo{font:20px Montserrat-Bold,sans-serif;letter-spacing:1px;margin:117px 0 0}.header__title{font:30px Montserrat-Bold,sans-serif;text-transform:uppercase;line-height:1.2;margin:27px 0 0}.header__subtitle{font:18px Roboto-Light,sans-serif;line-height:1.2;padding:0 30px;margin:10px 0 0}.header__choice{width:280px;margin:0 auto;padding:15px 0 0}.choiсe__link{display:block;height:40px;width:280px;padding:11.2px 2px 0 0;background-color:#ff4e50;border-radius:20px;font:14px Montserrat-Bold,sans-serif;color:#fff}}@media (min-width:727px){.header{height:700px;background:url(../img/lading-img.jpg) -337px 0 no-repeat}.header__checkin{float:right;margin:38px -5px 0 0;width:25%}.header__logo{float:left;margin:46px 0 0 -2px;width:28%}.header__topic{margin:215px 5px 0 0}.header__title{width:500px;font:52px Montserrat-Bold,sans-serif;text-transform:uppercase;line-height:1.2;margin:0 auto}.header__subtitle{font:24px Roboto-Light,sans-serif;margin:22px 0 0}.header__choice{width:226px;padding:33px 0 0 2px}.choiсe__link{width:226px}}@media (min-width:1024px){.header{background:url(../img/lading-img.jpg) no-repeat;background-size:cover}.header__checkin{margin:38px 82px 0 0}.header__logo{margin:46px 0 0 75px}}@media (min-width:320px){.content{position:relative;overflow:hidden;width:auto;margin:0 auto}.content__title{text-align:center;font:22px Montserrat-Bold,sans-serif;margin:35px 0 0}.content__carousel-wrapperr{position:relative;overflow:hidden;margin:10px auto;width:300px;height:100%}.owl-carousel{margin:0 0 10px;width:300px;height:240px}.owl-carousel__image{width:300px;height:240px;border:1px solid transparent;border-radius:4px}.owl-carousel__image::after{content:'';position:absolute;width:296px;height:238px;top:0;left:2px;background-image:-webkit-linear-gradient(bottom,rgba(0,0,0,.3) 0,transparent 100%);background-image:linear-gradient(to top,rgba(0,0,0,.3) 0,transparent 100%);border-radius:4px;z-index:1}.image__article{position:absolute;width:90%;top:73px;left:21px;color:#fff;z-index:2}.step1{background:url(../img/slider_mobile_1.png) 0 2px/cover no-repeat;width:297px;height:240px}.step1::after{left:1px;top:2px}.step2{background-image:url(../img/slider_mobile_2.png)}.step2 .img_article{margin:29px 0 0 -1px}.step3{background-image:url(../img/slider_mobile_3.png);margin:0 0 0 -2px}.image__button-step{font:10px Montserrat-Regular,sans-serif;display:block;text-transform:uppercase;color:#fff;letter-spacing:1.8px;width:70px;height:20px;background-color:#ff4e50;border-radius:10px;padding:4px 0 3px 15px}.image__title{font:24px Montserrat-Bold,sans-serif;margin:14px 0 0 -2px}.image__text{font:14px Roboto-Light,sans-serif;color:#ccc;margin:10px 0 0 -2px;line-height:1.28}.owl-next,.owl-prev{color:rgba(255,255,255,0);width:45px;height:55px;z-index:1;top:80px;position:absolute}.owl-prev{background:url(../img/arrow.png) no-repeat;left:3%}.owl-next{background:url(../img/arrow2.png) no-repeat;left:87%}}@media (min-width:727px){.content__title{margin:94px 0 0 6px}.content__carousel-wrapper{margin:33px auto;width:768px;height:100%}.owl-carousel{position:relative;float:left;margin:0 10px;width:236px;height:400px}.owl-carousel__image{width:236px;height:400px;border:1px solid #fff;border-radius:4px;behavior:url(PIE.htc)}.image__article{margin:139px 0 0}.owl-carousel__image:nth-child(3){margin-right:0}.owl-prev{background:url(../img/arrow.png) no-repeat;top:38px;left:9%}.owl-next{background:url(../img/arrow2.png) no-repeat;top:38px;left:78%}.step1{background:url(../img/slider_big_1_ie.jpg) -40px 0 no-repeat}.step2{background:url(../img/slider_big_2_ie.jpg) -28px 0 no-repeat}.step2 .img_article{margin-top:186px}.step3{background:url(../img/slider_big_3_ie.jpg) -28px 0 no-repeat;margin:0 -4px 0 0}.owl-carousel__image::after{width:234px;background-image:none}}@media (min-width:1024px){.content__title{margin:94px 0 0 -3px}.content__carousel-wrapper{width:1024px;padding:0 30px}.owl-carousel,.owl-carousel__image{width:300px;height:400px}.image__article{display:block;margin:155px 0 0 2px}.step1{background:url(../img/step1.jpg) 0 0/cover no-repeat}.step2{background:url(../img/step2.jpg) 0 0/cover no-repeat}.step2 .img_article{margin:185px 0 0 1px}.step3{background:url(../img/step3.jpg) 0 0/cover no-repeat}.owl-next,.owl-prev{top:151px}.owl-next{left:84%}.owl-prev{left:8%}}@media (min-width:320px){.humans_face,.partners{position:relative;overflow:hidden}.partners{width:90%;margin:0 auto;text-align:center;color:#333}.partners_title{font:22px Montserrat-Bold,sans-serif;margin:18px 0 0 -7px}.figure{width:90%;margin:13px auto;display:block}.face3,.face4{padding:1px 4px 0 0}.humans_face{margin:0 auto;width:135px;height:135px}.face{width:124px;height:124px;border-radius:50%}.humans_sprit{width:40px;height:40px;position:absolute;bottom:9px;right:4px;background:url(../img/sprite-desktop-small-1.png) -2px -3px no-repeat}.humans_info{width:230px;margin:3px auto;padding-bottom:15px}.info_title{font:14px Montserrat-Bold,sans-serif}.info_text{font:14px Roboto-Light,sans-serif;color:#666;margin:13px 0 0;letter-spacing:.3px;line-height:1.2}.sprite2{background:url(../img/sprite-desktop-small-1.png) -83px -3px no-repeat}.sprite3{background:url(../img/sprite-desktop-small-1.png) -43px -3px no-repeat}.sprite4{background:url(../img/sprite-desktop-small-1.png) -124px -3px no-repeat}.partners_form{position:relative;overflow:hidden;width:286px;margin:0 auto}.partners_button{display:block;width:280px;height:40px;background-color:#fff;border:2px solid #ff4e50;padding:8px 0 0;border-radius:20px;color:#ff4e50;font:14px Montserrat-Bold,sans-serif}}@media (min-width:727px){.partners{margin:46px auto;width:66%;height:100%}.partners_men,.partners_women{width:48%;height:570px}.partners_men{float:left;display:inline;margin-left:5px}.partners_men .humans_info{margin-left:-7px}.partners_women{float:right}.partners_women .humans_info{margin-left:-9px}.figure{margin:30px auto}.face2,.face4{padding-top:14px}.partners_form{width:200px;top:-8px;left:2px}.partners_button{width:192px;height:40px}}@media (min-width:1024px){.partners{margin:44px auto;left:2px;width:945px;clear:both}.partners_men,.partners_women{height:310px}.figure{width:46%;margin-bottom:59px}.face1,.face3{float:left;display:inline;margin-left:2px}.face1 .humans_info,.face3 .humans_info{margin-left:-5%}.face3{margin-left:-53.2%}.face3 .humans_info{margin-left:-8%}.face2,.face4{float:right;display:inline}.face2 .humans_info,.face4 .humans_info{margin-left:-13px}.face2{margin:18px -52.1% 0 0}.face4{margin:16px 9px 0 0}}@media (min-width:320px){.content_gallery,.grid,.grid_item{position:relative;overflow:hidden}.grid,.grid_item,.search{overflow:hidden}.content_gallery,.item_text,.search{text-align:center}.content_gallery .gallerry_title,.item_text,.search_title{font:22px Montserrat-Bold,sans-serif}.content_gallery{width:300px;margin:34px auto}.content_gallery .gallerry_title{color:#333}.grid{width:100%;margin:10px auto}.grid_item{height:120px;width:300px;box-sizing:border-box;color:#fff;margin-bottom:10px;border:1px solid rgba(0,0,0,.1);border-radius:5px;display:block;background:center no-repeat}.form_edit,.form_input{width:280px;height:40px}.item_text{top:40%;left:35%;position:absolute;z-index:1;color:#fff}.search{position:relative;margin:-19px auto;color:#333;left:-1px;padding-bottom:10px}.form_question{font:18px Roboto-Light,sans-serif;margin-top:8px}.form_edit{margin:15px auto;padding:0 0 0 12px;font:14px Roboto-Light,sans-serif;background-color:#fff;border:1px solid #ccc;border-radius:4px;box-shadow:0 1px 0 #eee;letter-spacing:.5px}.form_input{margin:-5px auto;background-color:#ff4e50;border:1px solid #ff4e50;border-radius:20px;font:14px Montserrat-Bold,sans-serif;color:#fff}}@media (min-width:727px){.content_gallery{width:768px;margin:88px auto}.form_question{margin-top:28px}.form_edit{width:240px;margin:37px 0 0 -2px}.form_input{width:160px;margin-left:6px}.grid{margin-top:33px;width:755px}.grid_item{width:236px;height:310px}.grid_item_big{width:492px;height:310px}.search{margin:-13px auto}}@media (min-width:1024px){.content_gallery,.grid{width:945px}.grid_item{width:300px;height:310px}.grid_item_big{width:622px;height:310px}}.messagePosition{margin:0 auto;position:relative;overflow:hidden}.messageInline{display:inline-block;vertical-align:top}.messageTransform{text-transform:uppercase}.messageSignBtn{width:90px;height:36px;padding:2px 0 0 12px;border:2px solid #fff;border-radius:18px}.messageChoiceLink{display:block;height:40px;padding:11.2px 2px 0 0;background-color:#ff4e50;border-radius:20px;font:14px Montserrat-Bold,sans-serif}@media (min-width:320px){.footer_block,.footer_content,.footer_list,.footer_logo{position:relative;overflow:hidden}.footer_block{margin:54px auto;text-align:center;width:100%;color:#333;border-top:4px solid #ff4e50}.footer_title{text-transform:uppercase;color:#ff4e50;font:16px Montserrat-Bold,sans-serif;letter-spacing:.7px;margin:16px 0 0}.footer_content{margin:11px auto;padding-bottom:2px}.footer_content_title{font:14px Montserrat-Bold,sans-serif}.footer_list{width:80%;margin:0 auto;padding-left:17px}.footer_link{display:block;float:left;margin-left:13px;color:#666;font:14px Roboto-Light,sans-serif}.footer_logo{margin:13px auto}.footer_design{color:#ccc;text-transform:uppercase;font:10px Montserrat-Bold,sans-serif;letter-spacing:3px;margin-bottom:6px}}@media (min-width:727px){.footer_block{margin:104px auto;width:100%}.footer_wrap{width:90%;margin:11px auto}.footer_title{float:left;clear:both;margin-top:25px}.footer_content{float:left;margin-left:12.5%;top:15px;width:140px}.footer_content_title,.footer_link,.footer_list{margin:0;padding:0;float:left}.footer_content_title{padding-bottom:6px}.footer_link{clear:both;line-height:1.8}.second{margin:3.7% 0 0 4.4%}.footer_logo{float:right;margin:4% 0 0}.footer_design{margin:0 -28px 4px 0}}@media (min-width:1024px){.footer_wrap{width:65.5%}.footer_content{margin-left:10.5%}.second{margin:2.8% 0 0 2.2%}.footer_logo{margin:3% 0 0}}
/*# sourceMappingURL=data:application/json;base64, */
